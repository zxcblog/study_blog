syntax = "proto3";

option go_package = "github.com/zxcblog/study-blog/pb;pb";

import "protoc-gen-openapiv2/options/annotations.proto";

// 在.proto文件的包声明之后，添加以下内容来定义Swagger文档的基础信息
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "study-blog";
    version: "1.0.0";
    description: "学习笔记";
    contact: {
      name: "zxc";
      url: "https://github.com/zxcblog/study-blog";
      email: "zxc_7310@163.com";
    };
    license: {
      name: "Apache 2.0";
      url: "https://www.apache.org/licenses/LICENSE-2.0.html";
    };
  };
  host: "localhost:9090"
  base_path: "/gateway"
  external_docs: {
    url: "http://localhost:9090/gateway"
    description: "关于日记账V2项目的详细介绍"
  }
  schemes: HTTP
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
  // 认证相关配置
  security_definitions: {
    security: {
      key: "ApiKeyAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "x-Auth"
        extensions: {
          key: "x-amazon-apigateway-authorizer"
          value: {
            struct_value: {
              fields: {
                key: "type"
                value: {string_value: "token"}
              }
              fields: {
                key: "authorizerResultTtlInSeconds"
                value: {number_value: 60}
              }
            }
          }
        }
      }
    }
  }
  security: {
    security_requirement: {
      key: "ApiKeyAuth"
      value: {}
    }
  }
  // 设置统一返回信息
  responses: {
    key: "403"
    value: {description: "用户权限不够时返回错误信息"}
  }
  responses: {
    key: "404"
    value: {
      description: "找不到资源时返回错误信息"
      schema: {
        json_schema: {type: STRING}
      }
    }
  }
  responses: {
    key: "418"
    value: {
      description: "测试其他文件中的请求体"
      schema: {
        json_schema: {ref: ".base.v1.Error"}
      }
    }
  }

  // 定义自定义字段信息， swagger中不能查看
  extensions: {
    key: "x-grpc-gateway-foo"
    value: {string_value: "bar"}
  }
  extensions: {
    key: "x-grpc-gateway-baz-list"
    value: {
      list_value: {
        values: {string_value: "one"}
        values: {bool_value: true}
      }
    }
  }
};