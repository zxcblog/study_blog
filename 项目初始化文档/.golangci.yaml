run:
  concurrency: 0
  timeout: 5m
  issues-exit-code: 2
  tests: true
  build-tags:
    - mytag
  allow-parallel-runners: true
  allow-serial-runners: true
  go: '1.21'

output:
  formats:
    - format: json
      path: stderr
    - format: checkstyle
      path: report.xml
    - format: colored-line-number
      path: stdout
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  path-prefix: ""
  sort-results: true
  sort-order:
    - linter
    - severity
    - file
  show-status: true

# All available settings of specific linters.
linters-settings:
  errcheck:
    check-type-assertions: false
    check-blank: false
    disable-default-exclusions: true
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)
      - encoding/json.Marshal
      - encoding/json.MarshalIndent
  gosimple:
    checks: ["all"]
  govet:
    enable:
      - atomicalign
    disable:
      - shadow
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  staticcheck:
    checks: ["all", "-SA4006", "-SA4017"]
  unused:
    field-writes-are-uses: true
    parameters-are-used: true
    post-statements-are-reads: true

    # Mark all exported fields as used.
    # default: true
    exported-fields-are-used: false
    # Mark all local variables as used.
    # default: true
    local-variables-are-used: false
    # Mark all identifiers inside generated files as used.
    # Default: true
    generated-is-used: false
  bidichk:
    left-to-right-embedding: true
    right-to-left-embedding: true
    pop-directional-formatting: true
    left-to-right-override: true
    right-to-left-override: true
    left-to-right-isolate: true
    right-to-left-isolate: true
    first-strong-isolate: true
    pop-directional-isolate: true
  cyclop:
    max-complexity: 50
    package-average: 0.0
    skip-tests: false
  decorder:
    dec-order:
      - type
      - const
      - var
      - func
    disable-dec-order-check: false
    ignore-underscore-vars: true
    disable-dec-num-check: true
    #disable-type-dec-num-check: false
    #disable-const-dec-num-check: false
    #disable-var-dec-num-check: false
    disable-init-func-first-check: false
  depguard:
    rules:
      main:
        list-mode: strict
        files:
          - "$all"
        allow:
          - $gostd
          - lim-server-finance
          - gorm.io
          - google.golang.org
          - github.com
          - git.limonergy.org
          - e.coding.net
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: 请使用go.uber.org/zap
          - pkg: "github.com/pkg/errors"
            desc: 请使用官方error库
  dogsled:
    max-blank-identifiers: 2
  dupl:
    threshold: 100
  errchkjson:
    check-error-free-encoding: true
    report-no-exported: false
  errorlint:
    errorf: true
    errorf-multi: false
    asserts: true
    comparison: true
    # Allowed errors.
    # Default: []
    allowed-errors:
      - err: "io.EOF"
        fun: "example.com/pkg.Read"
    allowed-errors-wildcard:
      - err: "example.com/pkg.ErrMagic"
        fun: "example.com/pkg.Magic"
  funlen:
    lines: 80
    statements: -1
    ignore-comments: true
  gocognit:
    min-complexity: 30
  goconst:
    min-len: 2
    min-occurrences: 2
    ignore-tests: true
    match-constant: true
    numbers: true
    min: 2
    max: 2
    ignore-calls: false
    ignore-strings: ':%|implement me'
  gosec:
    # To select a subset of rules to run.
    # Available rules: https://github.com/securego/gosec#available-rules
    # Default: [] - means include all rules
    includes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G111 # Potential directory traversal
      - G112 # Potential slowloris attack
      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)
      - G114 # Use of net/http serve function that has no support for setting timeouts
      - G115 # Potential integer overflow when converting between integer types
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Poor file permissions used when creating a file with os.Create
      - G401 # Detect the usage of MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G405 # Detect the usage of DES or RC4
      - G406 # Detect the usage of MD4 or RIPEMD160
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G506 # Import blocklist: golang.org/x/crypto/md4
      - G507 #Import blocklist: golang.org/x/crypto/ripemd160
      - G601 # Implicit memory aliasing of items from a range statement
      - G602 # Slice access out of bounds
    # To specify a set of rules to explicitly exclude.
    # Available rules: https://github.com/securego/gosec#available-rules
    # Default: []
    excludes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G111 # Potential directory traversal
      - G112 # Potential slowloris attack
      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)
      - G114 # Use of net/http serve function that has no support for setting timeouts
      - G115 # Potential integer overflow when converting between integer types
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Poor file permissions used when creating a file with os.Create
      - G401 # Detect the usage of MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G405 # Detect the usage of DES or RC4
      - G406 # Detect the usage of MD4 or RIPEMD160
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G506 # Import blocklist: golang.org/x/crypto/md4
      - G507 #Import blocklist: golang.org/x/crypto/ripemd160
      - G601 # Implicit memory aliasing of items from a range statement
      - G602 # Slice access out of bounds
    # Exclude generated files
    # Default: false
    exclude-generated: true
    # Filter out the issues with a lower severity than the given value.
    # Valid options are: low, medium, high.
    # Default: low
    severity: medium
    # Filter out the issues with a lower confidence than the given value.
    # Valid options are: low, medium, high.
    # Default: low
    confidence: medium
    # Concurrency value.
    # Default: the number of logical CPUs usable by the current process.
    concurrency: 12
    # To specify the configuration of rules.
    config:
      # Globals are applicable to all rules.
      global:
        # If true, ignore #nosec in comments (and an alternative as well).
        # Default: false
        nosec: true
        # Add an alternative comment prefix to #nosec (both will work at the same time).
        # Default: ""
        "#nosec": "#my-custom-nosec"
        # Define whether nosec issues are counted as finding or not.
        # Default: false
        show-ignored: true
        # Audit mode enables addition checks that for normal code analysis might be too nosy.
        # Default: false
        audit: true
      G101:
        # Regexp pattern for variables and constants to find.
        # Default: "(?i)passwd|pass|password|pwd|secret|token|pw|apiKey|bearer|cred"
        pattern: "(?i)example"
        # If true, complain about all cases (even with low entropy).
        # Default: false
        ignore_entropy: false
        # Maximum allowed entropy of the string.
        # Default: "80.0"
        entropy_threshold: "80.0"
        # Maximum allowed value of entropy/string length.
        # Is taken into account if entropy >= entropy_threshold/2.
        # Default: "3.0"
        per_char_threshold: "3.0"
        # Calculate entropy for first N chars of the string.
        # Default: "16"
        truncate: "32"
      # Additional functions to ignore while checking unhandled errors.
      # Following functions always ignored:
      #   bytes.Buffer:
      #     - Write
      #     - WriteByte
      #     - WriteRune
      #     - WriteString
      #   fmt:
      #     - Print
      #     - Printf
      #     - Println
      #     - Fprint
      #     - Fprintf
      #     - Fprintln
      #   strings.Builder:
      #     - Write
      #     - WriteByte
      #     - WriteRune
      #     - WriteString
      #   io.PipeWriter:
      #     - CloseWithError
      #   hash.Hash:
      #     - Write
      #   os:
      #     - Unsetenv
      # Default: {}
      G104:
        fmt:
          - Fscanf
      G111:
        # Regexp pattern to find potential directory traversal.
        # Default: "http\\.Dir\\(\"\\/\"\\)|http\\.Dir\\('\\/'\\)"
        pattern: "custom\\.Dir\\(\\)"
      # Maximum allowed permissions mode for os.Mkdir and os.MkdirAll
      # Default: "0750"
      G301: "0750"
      # Maximum allowed permissions mode for os.OpenFile and os.Chmod
      # Default: "0600"
      G302: "0600"
      # Maximum allowed permissions mode for os.WriteFile and ioutil.WriteFile
      # Default: "0600"
      G306: "0600"
  nestif:
    min-complexity: 4
  stylecheck:
    checks: [ "all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022" ]
    dot-import-whitelist:
      - fmt
    initialisms: [ "ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS" ]
    http-status-code-whitelist: [ "200", "400", "404", "500" ]

linters:
  disable-all: true
  enable:
    - asciicheck
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused
    - bidichk
    - bodyclose
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
#    - err113
    - errchkjson
    - errorlint
    - funlen
    - gocognit
    - goconst
    - gosec
    - nestif
    - stylecheck
issues:
  exclude:
    - tools/.*
    - test/.*
    - third_party/.*

  exclude-rules:
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "
  exclude-use-default: true
  exclude-case-sensitive: false
  exclude-dirs:
    - src/external_libs
    - autogenerated_by_my_lib
  exclude-dirs-use-default: true
  exclude-files:
    - ".*\\.my\\.go$"
    - lib/bad.go
  exclude-generated: strict
  include:
    - EXC0002
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  new-from-rev: HEAD
  new-from-patch: path/to/patch/file
  whole-files: true
  fix: true

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info